<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jsjx.dorm.app.dao.DormUserDao" >
    <resultMap id="BaseResultMap" type="DormUser" >
        <id column="USER_ID" property="userId" />
        <result column="USER_ID" property="userId"/>
        <result column="USER_NAME" property="userName"/>
        <result column="PASS_WORD" property="passWord"/>
        <result column="MEMO" property="memo"/>
        <result column="ENABLE_FLAG" property="enableFlag"/>
        <result column="CREATED_BY" property="createdBy"/>
        <result column="CREATED_DATE" property="createdDate"/>
        <result column="UPDATED_BY" property="updatedBy"/>
        <result column="UPDATED_DATE" property="updatedDate"/>
        <result column="COMPANY_CODE" property="companyCode"/>
    </resultMap>
    <sql id="Base_Column_List" >
        USER_ID,USER_NAME,PASS_WORD,MEMO,ENABLE_FLAG,CREATED_BY,CREATED_DATE,UPDATED_BY,UPDATED_DATE,COMPANY_CODE
    </sql>
    <select id="findById"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dorm_user
        where USER_ID = #{userId}
    </select>
    <!-- 不写入参是因为MyBatis 可以通过 TypeHandler 推断出具体传入语句的参数，默认值为 unset 所以要注册bean-->
    <select id="findBySelective"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dorm_user
        where ENABLE_FLAG = '1' 
        <if test="userId != null" >
           AND USER_ID = #{userId}
        </if>
        <if test="userName != null" >
        <bind name="l_userName" value="'%' + _parameter.getUserName() + '%'" />
           AND USER_NAME like #{l_userName}
        </if>
        <if test="passWord != null" >
        <bind name="l_passWord" value="'%' + _parameter.getPassWord() + '%'" />
           AND PASS_WORD like #{l_passWord}
        </if>
        <if test="memo != null" >
        <bind name="l_memo" value="'%' + _parameter.getMemo() + '%'" />
           AND MEMO like #{l_memo}
        </if>
        <if test="enableFlag != null" >
        <bind name="l_enableFlag" value="'%' + _parameter.getEnableFlag() + '%'" />
           AND ENABLE_FLAG like #{l_enableFlag}
        </if>
        <if test="createdBy != null" >
        <bind name="l_createdBy" value="'%' + _parameter.getCreatedBy() + '%'" />
           AND CREATED_BY like #{l_createdBy}
        </if>
        <if test="createdDate != null" >
           AND CREATED_DATE = #{createdDate}
        </if>
        <if test="updatedBy != null" >
        <bind name="l_updatedBy" value="'%' + _parameter.getUpdatedBy() + '%'" />
           AND UPDATED_BY like #{l_updatedBy}
        </if>
        <if test="updatedDate != null" >
           AND UPDATED_DATE = #{updatedDate}
        </if>
        <if test="companyCode != null" >
        <bind name="l_companyCode" value="'%' + _parameter.getCompanyCode() + '%'" />
           AND COMPANY_CODE like #{l_companyCode}
        </if>
    </select>
    <insert id="insert">
        insert into dorm_user (<include refid="Base_Column_List" />)
        values ( #{userId,jdbcType=VARCHAR }, #{userName,jdbcType=VARCHAR }, #{passWord,jdbcType=VARCHAR }, #{memo,jdbcType=VARCHAR }, #{enableFlag,jdbcType=VARCHAR }, #{createdBy,jdbcType=VARCHAR }, #{createdDate}, #{updatedBy,jdbcType=VARCHAR }, #{updatedDate}, #{companyCode,jdbcType=VARCHAR })
    </insert>

    <insert id="insertAll">
        INSERT ALL
        <foreach collection="list" item="p" separator=" ">
        into dorm_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="p.userId != null" >
                USER_ID,
            </if>
            <if test="p.userName != null" >
                USER_NAME,
            </if>
            <if test="p.passWord != null" >
                PASS_WORD,
            </if>
            <if test="p.memo != null" >
                MEMO,
            </if>
            <if test="p.enableFlag != null" >
                ENABLE_FLAG,
            </if>
            <if test="p.createdBy != null" >
                CREATED_BY,
            </if>
            <if test="p.createdDate != null" >
                CREATED_DATE,
            </if>
            <if test="p.updatedBy != null" >
                UPDATED_BY,
            </if>
            <if test="p.updatedDate != null" >
                UPDATED_DATE,
            </if>
            <if test="p.companyCode != null" >
                COMPANY_CODE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="p.userId != null" >
                #{p.userId},
            </if>
            <if test="p.userName != null" >
                #{p.userName},
            </if>
            <if test="p.passWord != null" >
                #{p.passWord},
            </if>
            <if test="p.memo != null" >
                #{p.memo},
            </if>
            <if test="p.enableFlag != null" >
                #{p.enableFlag},
            </if>
            <if test="p.createdBy != null" >
                #{p.createdBy},
            </if>
            <if test="p.createdDate != null" >
                #{p.createdDate},
            </if>
            <if test="p.updatedBy != null" >
                #{p.updatedBy},
            </if>
            <if test="p.updatedDate != null" >
                #{p.updatedDate},
            </if>
            <if test="p.companyCode != null" >
                #{p.companyCode},
            </if>
        </trim>
        </foreach>
        select 1 from dual
    </insert>

    <insert id="insertSelective">
        insert into dorm_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                USER_ID,
            </if>
            <if test="userName != null" >
                USER_NAME,
            </if>
            <if test="passWord != null" >
                PASS_WORD,
            </if>
            <if test="memo != null" >
                MEMO,
            </if>
            <if test="enableFlag != null" >
                ENABLE_FLAG,
            </if>
            <if test="createdBy != null" >
                CREATED_BY,
            </if>
            <if test="createdDate != null" >
                CREATED_DATE,
            </if>
            <if test="updatedBy != null" >
                UPDATED_BY,
            </if>
            <if test="updatedDate != null" >
                UPDATED_DATE,
            </if>
            <if test="companyCode != null" >
                COMPANY_CODE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId},
            </if>
            <if test="userName != null" >
                #{userName},
            </if>
            <if test="passWord != null" >
                #{passWord},
            </if>
            <if test="memo != null" >
                #{memo},
            </if>
            <if test="enableFlag != null" >
                #{enableFlag},
            </if>
            <if test="createdBy != null" >
                #{createdBy},
            </if>
            <if test="createdDate != null" >
                #{createdDate},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy},
            </if>
            <if test="updatedDate != null" >
                #{updatedDate},
            </if>
            <if test="companyCode != null" >
                #{companyCode},
            </if>
        </trim>
    </insert>
    <update id="updateBySelective">
        update dorm_user
        <set>
            <if test="userId != null" >
                USER_ID = #{userId},
            </if>
            <if test="userName != null" >
                USER_NAME = #{userName},
            </if>
            <if test="passWord != null" >
                PASS_WORD = #{passWord},
            </if>
            <if test="memo != null" >
                MEMO = #{memo},
            </if>
            <if test="enableFlag != null" >
                ENABLE_FLAG = #{enableFlag},
            </if>
            <if test="createdBy != null" >
                CREATED_BY = #{createdBy},
            </if>
            <if test="createdDate != null" >
                CREATED_DATE = #{createdDate},
            </if>
            <if test="updatedBy != null" >
                UPDATED_BY = #{updatedBy},
            </if>
            <if test="updatedDate != null" >
                UPDATED_DATE = #{updatedDate},
            </if>
            <if test="companyCode != null" >
                COMPANY_CODE = #{companyCode},
            </if>
        </set>
        where USER_ID = #{userId}
    </update>
</mapper>
